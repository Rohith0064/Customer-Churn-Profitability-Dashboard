"""Customer Churn & Profitability Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aw17BnFaoDUJ5_qHvzzuWRFN_vzjrCv1
"""

!pip install pandas numpy matplotlib seaborn --quiet
import pandas as pd, numpy as np
import matplotlib.pyplot as plt, seaborn as sns
from datetime import datetime
from google.colab import files
import warnings
warnings.filterwarnings('ignore')


uploaded = files.upload()
df = pd.read_csv(next(iter(uploaded)))
df.head()

df.columns


df['transaction_date'] = pd.to_datetime(df['transaction_date'])
print("Missing values:\n", df.isnull().sum())
print("\nData Types:\n", df.dtypes)
print("\nSummary Stats:\n", df.describe(include='all'))

total_revenue = df['subscription_price'].sum()
print(f"Total Revenue: ₹{total_revenue:.2f}")

df['month'] = df['transaction_date'].dt.to_period('M')
monthly_active = df.groupby('month')['cust_id'].nunique()
print("\nMonthly Active Users:\n", monthly_active)

arpu = df.groupby('cust_id')['subscription_price'].sum().mean()
print(f"\nAverage Revenue Per User (ARPU): ₹{arpu:.2f}")

customer_months = df.groupby('cust_id')['month'].nunique()
retained_customers = customer_months[customer_months > 1].count()
total_customers = df['cust_id'].nunique()

retention_rate = (retained_customers / total_customers) * 100
print(f"\nRetention Rate: {retention_rate:.2f}%")

churn_rate = 100 - retention_rate
print(f"Churn Rate: {churn_rate:.2f}%")

subscription_revenue = df.groupby('subscription_type')['subscription_price'].sum().sort_values(ascending=False)
print("Revenue by Subscription Type:\n", subscription_revenue)

age_revenue = df.groupby('age_group')['subscription_price'].mean().sort_values(ascending=False)
print("\nAverage Revenue by Age Group:\n", age_revenue)

gender_revenue = df.groupby('customer_gender')['subscription_price'].sum()
print("\nGender-wise Revenue Contribution:\n", gender_revenue)

active_users_by_country = df.groupby('customer_country')['cust_id'].nunique().sort_values(ascending=False)
print("\nActive Users by Country:\n", active_users_by_country)

referral_revenue = df.groupby('referral_type')['subscription_price'].sum().sort_values(ascending=False)
print("\nRevenue by Referral Type:\n", referral_revenue)

df.to_csv("subscription_analysis.csv", index=False)
